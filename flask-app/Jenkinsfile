pipeline {
    agent any

    environment {
        SERVER_IP = credentials('prod-server-ip')
    }

    stages {
        stage('Install Python Packages') {
            steps {
                dir('flask-app') {
                    sh '''
                        echo "Installing Python packages..."
                        pip3 install --user -r requirements.txt
                        export PATH=$HOME/.local/bin:$PATH
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('flask-app') {
                    sh '''
                        echo "Running tests..."
                        export PATH=$HOME/.local/bin:$PATH
                        pytest
                    '''
                }
            }
        }

        stage('Package Flask App') {
            steps {
                dir('flask-app') {
                    sh '''
                        echo "Packaging flask-app contents..."
                        zip -r flaskapp.zip . -x "*.git*" "*.venv*" "myenv/*" "Jenkinsfile" "steps.sh" "tasks.txt" "flask.service"
                        ls -lh flaskapp.zip
                    '''
                }
            }
        }

        stage('Deploy to Production Server') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ssh-key', keyFileVariable: 'MY_SSH_KEY', usernameVariable: 'USERNAME')]) {
                    sh '''
                        echo "Deploying flask-app to Production Server..."
                        scp -i $MY_SSH_KEY -o StrictHostKeyChecking=no flask-app/flaskapp.zip $USERNAME@$SERVER_IP:/home/$USERNAME/

                        ssh -tt -i $MY_SSH_KEY -o StrictHostKeyChecking=no $USERNAME@$SERVER_IP << 'EOF'
                            set -e

                            echo "Installing unzip if not present..."
                            command -v unzip >/dev/null 2>&1 || (sudo apt-get update -y && sudo apt-get install -y unzip)

                            echo "Unzipping flaskapp.zip..."
                            mkdir -p /home/$USER/app
                            unzip -o /home/$USER/flaskapp.zip -d /home/$USER/app

                            echo "Setting up Python virtual environment..."
                            cd /home/$USER/app
                            if [ ! -d "venv" ] || [ ! -f "venv/bin/activate" ]; then
                                python3 -m venv venv
                            fi

                            source venv/bin/activate
                            pip install --upgrade pip
                            pip install -r requirements.txt

                            echo "Restarting Flask service..."
                            sudo systemctl daemon-reload
                            sudo systemctl restart flaskapp.service

                            echo "âœ… Deployment complete"
                            exit 0
EOF
                    '''
                }
            }
        }
    }
}